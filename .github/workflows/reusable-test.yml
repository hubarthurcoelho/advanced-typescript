name: Run Tests & Type Checks

on:
  workflow_call:
    inputs:
      node-version:
        type: number
        description: 'Node version to be used'
        required: true

      run-type-checks:
        type: boolean
        description: Whether or not to run type checks
        required: true

      run-tests:
        type: boolean
        description: Whether or not to run tests
        required: true

      collect-test-coverage:
        type: boolean
        description: Whether or not to collect test coverage
        required: true

      run-sonar-cloud: 
        type: boolean
        description: 'If sonar cloud should analyze the code'
        required: true

jobs:
  verify-code:
    runs-on: ubuntu-latest
    name: Verify Code
    steps:
      - name: Display Workflow Inputs
        run: |
          echo "Node Version: ${{ inputs.node-version }}"
          echo "Run Type Checks: ${{ inputs.run-type-checks }}"
          echo "Run Tests: ${{ inputs.run-tests }}"
          echo "Collect Covarage: ${{ inputs.collect-test-coverage }}"
          echo "Run SonarQube Scan: ${{ inputs.run-sonar-cloud }}"

      - name: Checkout full code history
        uses: actions/checkout@v2
        if: inputs.run-sonar-cloud == true
        with:
          fetch-depth: 0
      
      - name: Checkout last commit
        uses: actions/checkout@v2
        if: inputs.run-sonar-cloud == false
        with:
          fetch-depth: 1
  
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ inputs.node-version }}
  
      - name: Cache Dependencies
        id: cache-dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ inputs.node-version }}-api-core-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ inputs.node-version }}-api-core- 
  
      - name: Install Dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: npm install

      - name: Type Checks
        if: inputs.run-type-checks
        id: type-check
        run: npm run typecheck
  
      - name: Run Tests
        if: inputs.run-tests
        run: |
          echo "Collect Coverage: ${{ inputs.collect-test-coverage }}"
          if [ "${{ inputs.collect-test-coverage }}" = "true" ]; then
            npm run test:coverage
          else
            npm run test
          fi

      - name: Archive code coverage results
        uses: actions/upload-artifact@v3
        if: inputs.collect-test-coverage
        with:
          name: coverage
          path: ./coverage
          retention-days: 1

  sonarAnalysis:
    needs: verify-code
    runs-on: ubuntu-latest
    name: Runar Sonar analysis
    if: inputs.run-sonar-cloud
    steps:
      - name: Checkout full code history
        uses: actions/checkout@v2
        if: inputs.run-sonar-cloud == true
        with:
          fetch-depth: 0

      - name: Retrieve code coverage
        uses: actions/download-artifact@v3
        if: inputs.collect-test-coverage
        with:
          name: coverage

      - name: Run Sonar Cloud
        uses: sonarsource/sonarcloud-github-action@master
        if: inputs.run-sonar-cloud
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
